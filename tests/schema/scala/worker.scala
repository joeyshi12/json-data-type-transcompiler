import org.joda.time.DateTime

case class Root(
    PersonId: Int,
    PersonNumber: String,
    CorrespondenceLanguage: CorrespondenceLanguage,
    BloodType: BloodType,
    DateOfBirth: DateOfBirth,
    DateOfDeath: DateOfDeath,
    CountryOfBirth: CountryOfBirth,
    RegionOfBirth: RegionOfBirth,
    TownOfBirth: TownOfBirth,
    ApplicantNumber: ApplicantNumber,
    CreatedBy: String,
    CreationDate: String,
    LastUpdatedBy: String,
    LastUpdateDate: String,
    workRelationships: workRelationships
)

case class workRelationships(
    items: IndexedSeq[itemsItem]
)

case class itemsItem(
    PeriodOfServiceId: Int,
    LegislationCode: String,
    LegalEntityId: Int,
    LegalEmployerName: LegalEmployerName,
    WorkerType: String,
    PrimaryFlag: Boolean,
    StartDate: String,
    LegalEmployerSeniorityDate: LegalEmployerSeniorityDate,
    EnterpriseSeniorityDate: EnterpriseSeniorityDate,
    OnMilitaryServiceFlag: Boolean,
    WorkerNumber: WorkerNumber,
    ReadyToConvertFlag: ReadyToConvertFlag,
    TerminationDate: TerminationDate,
    NotificationDate: NotificationDate,
    LastWorkingDate: LastWorkingDate,
    RevokeUserAccess: RevokeUserAccess,
    RecommendedForRehire: String,
    RecommendationReason: RecommendationReason,
    RecommendationAuthorizedByPersonId: RecommendationAuthorizedByPersonId,
    CreatedBy: String,
    CreationDate: String,
    LastUpdatedBy: String,
    LastUpdateDate: String,
    assignments: assignments
)

case class assignments(
    items: IndexedSeq[itemsItem1]
)

case class itemsItem1(
    AssignmentId: Int,
    AssignmentNumber: String,
    AssignmentName: String,
    ActionCode: String,
    ReasonCode: ReasonCode,
    EffectiveStartDate: String,
    EffectiveEndDate: String,
    EffectiveSequence: Int,
    EffectiveLatestChange: String,
    BusinessUnitId: Int,
    BusinessUnitName: String,
    AssignmentType: String,
    AssignmentStatusTypeId: Int,
    AssignmentStatusTypeCode: String,
    AssignmentStatusType: String,
    SystemPersonType: String,
    UserPersonTypeId: Int,
    UserPersonType: String,
    ProposedUserPersonTypeId: ProposedUserPersonTypeId,
    ProposedUserPersonType: ProposedUserPersonType,
    ProjectedStartDate: ProjectedStartDate,
    ProjectedEndDate: ProjectedEndDate,
    PrimaryFlag: Boolean,
    PrimaryAssignmentFlag: Boolean,
    PositionId: PositionId,
    PositionCode: PositionCode,
    SynchronizeFromPositionFlag: Boolean,
    JobId: JobId,
    JobCode: JobCode,
    GradeId: GradeId,
    GradeCode: GradeCode,
    GradeLadderId: GradeLadderId,
    GradeLadderName: GradeLadderName,
    GradeStepEligibilityFlag: Boolean,
    GradeCeilingStepId: GradeCeilingStepId,
    GradeCeilingStep: GradeCeilingStep,
    DepartmentId: DepartmentId,
    DepartmentName: DepartmentName,
    ReportingEstablishmentId: ReportingEstablishmentId,
    ReportingEstablishmentName: ReportingEstablishmentName,
    LocationId: LocationId,
    LocationCode: LocationCode,
    WorkAtHomeFlag: Boolean,
    AssignmentCategory: AssignmentCategory,
    WorkerCategory: WorkerCategory,
    PermanentTemporary: PermanentTemporary,
    FullPartTime: FullPartTime,
    ManagerFlag: Boolean,
    HourlySalariedCode: HourlySalariedCode,
    NormalHours: NormalHours,
    Frequency: Frequency,
    StartTime: StartTime,
    EndTime: EndTime,
    SeniorityBasis: String,
    ProbationPeriod: ProbationPeriod,
    ProbationPeriodUnit: ProbationPeriodUnit,
    ProbationEndDate: ProbationEndDate,
    NoticePeriod: NoticePeriod,
    NoticePeriodUOM: NoticePeriodUOM,
    WorkTaxAddressId: WorkTaxAddressId,
    ExpenseCheckSendToAddress: ExpenseCheckSendToAddress,
    RetirementAge: RetirementAge,
    RetirementDate: RetirementDate,
    LabourUnionMemberFlag: LabourUnionMemberFlag,
    UnionId: UnionId,
    UnionName: UnionName,
    BargainingUnitCode: BargainingUnitCode,
    CollectiveAgreementId: CollectiveAgreementId,
    CollectiveAgreementName: CollectiveAgreementName,
    InternalBuilding: InternalBuilding,
    InternalFloor: InternalFloor,
    InternalOfficeNumber: InternalOfficeNumber,
    InternalMailstop: InternalMailstop,
    DefaultExpenseAccount: DefaultExpenseAccount,
    PeopleGroup: PeopleGroup,
    CreatedBy: String,
    CreationDate: String,
    LastUpdatedBy: String,
    LastUpdateDate: String
)
